//
// Copyright (C) 2009 Jens Pelzetter, for the Center of Social Politics of the University of Bremen
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
//

model com.arsdigita.cms.contenttypes;

import com.arsdigita.cms.ContentItem;
import com.arsdigita.cms.ContentPage;
import com.arsdigita.cms.DomainObject;

object type GenericOrganization extends ContentPage {
       String[0..1] organizationname = ct_genericorganizations.organizationname VARCHAR(512);
       String[0..1] organizationnameaddendum = ct_genericorganizations.organizationnameaddendum VARCHAR(512);
       String[0..1] description = ct_genericorganizations.description VARCHAR(2000);

       component OrganizationFunction[0..n] functions = join ct_genericorganizations.organization_id to ct_organizationfunctions.function_id;

       reference key (ct_genericorganizations.organization_id);
}

object type OrganizationFunction extends ContentItem {

       String[1..1] functionname = ct_organizationfunctions.functionname VARCHAR(256);

       reference key ( ct_organizationfunctions.function_id );
}

association {
	    GenericOrganization[0..1] associatedOrganizationForItem = 
	    			      join cms_items.item_id to genericorganization_content_item_map.item_id,
				      join genericorganization_content_item_map.organization_id to ct_genericorganizations.organization_id;

            ContentItem[0..n] associatedContentItemsForOrganization =
	    		      join ct_genericorganizations.organization_id to genericorganization_content_item_map.organization_id,
			      join genericorganization_content_item_map.item_id to cms_items.item_id;
}

// As mentioned in ccm-cms-types-contact/Contact.pdl (orginal version) an association of the above pattern
// does not work when removing items from the association. Instead of this, an data operation has to be used.

data operation removeGenericOrganizationFromContentItemAssociation {
     do {
     	delete from genericorganization_content_item_map where item_id = :itemID
     }
}

data operation removeGenericOrganizationFromAllAssociations {
     do {
     	delete from genericorganization_content_item_map where organization_id = :organizationID;
     }
}

query getGenericOrganizationForItem {
      BigDecimal genericOrganizationID;
      BigDecimal itemID;

      do {
      	 select genericorganization_id, item_id from genericorganization_content_item_map where item_id = :itemID
      } map {
      	genericOrganizationID = genericorganization_id;
	itemID = item_id;
      }
}
