//
// Copyright (C) 2010, 2011 Jens Pelzetter
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
//

model com.arsdigita.cms.contenttypes;

import com.arsdigita.cms.ContentPage;

//PDL definition for the basic attributes of publication.
object type Publication extends ContentPage {
       
       Integer[0..1] yearOfPublication = ct_publications.year INTEGER;
       String[0..1] abstract = ct_publications.abstract VARCHAR(4096);
       String[0..1] misc = ct_publications.misc VARCHAR(4096);
       //The reviewed property has been moved for performance reasons. It
       //is necessary to have access to this property from a data query    
       //over all publications of a person. Since this property was only 
       //available on some types, it was not possible to use joins *and*
       //get publications of *all* types. But exactly this use case appears on
       //several points.
       Boolean[0..1] reviewed = ct_publications.reviewed BIT ;

       reference key (ct_publications.publication_id);
}

//Assoication for the authors
association {
	    
	    Publication[0..n] publication = join cms_persons.person_id
	    		      		      to ct_publications_authorship.person_id,
					    join ct_publications_authorship.publication_id
					      to ct_publications.publication_id;

            GenericPerson[0..n] authors = join ct_publications.publication_id
	                                    to ct_publications_authorship.publication_id,
					  join ct_publications_authorship.person_id
                                            to cms_persons.person_id;

            // Additional attributes
	    Boolean[0..1] editor = ct_publications_authorship.editor BIT;
	    Integer[0..1] authorOrder = ct_publications_authorship.authorship_order INTEGER;
}

//Association between GenericOrganizationalUnit and Publications. 
//AuthoringStep is attached by configuration. 
//See GenericOrganizationalUnitsPublicationsStep and 
//PublicationGenericOrganizationalUnitsStep for more information
association {
    GenericOrganizationalUnit[0..n] orgaunits = join ct_publications.publication_id
                                                 to cms_organizationalunits_publications_map.publication_id,
                                               join cms_organizationalunits_publications_map.orgaunit_id
                                                 to cms_organizationalunits.organizationalunit_id;

    Publication[0..n] publications = join cms_organizationalunits.organizationalunit_id
                                       to cms_organizationalunits_publications_map.orgaunit_id,
                                     join cms_organizationalunits_publications_map.publication_id
                                       to ct_publications.publication_id;
    Integer[0..1] publicationOrder = cms_organizationalunits_publications_map.publication_order INTEGER;
}

//Retrieves the publications (the ids). Allows filtering for a orgaunit id 
//For each author there will be on row in the result
query getIdsOfPublicationsForOrgaUnitOneRowPerAuthor {
    BigDecimal publicationId;
    String objectType;
    BigDecimal orgaunitId;
    String title;
    Integer year;
    String authorSurname;
    String authorGivenname;

    do {
        select cms_pages.item_id, 
               cms_pages.title, 
               acs_objects.object_type, 
               cms_organizationalunits.organizationalunit_id, 
               ct_publications.year, 
               cms_persons.surname, 
               cms_persons.givenname
        from cms_pages 
        join ct_publications on cms_pages.item_id = ct_publications.publication_id 
        join ct_publications_authorship on ct_publications.publication_id = ct_publications_authorship.publication_id 
        join cms_persons on ct_publications_authorship.person_id = cms_persons.person_id 
        join cms_organizationalunits_publications_map on cms_pages.item_id = cms_organizationalunits_publications_map.publication_id
        join cms_organizationalunits on cms_organizationalunits_publications_map.orgaunit_id = cms_organizationalunits.organizationalunit_id
        join acs_objects on cms_pages.item_id = acs_objects.object_id
    } map {
        publicationId = cms_pages.item_id;
        objectType = acs_objects.object_type;
        orgaunitId = cms_organizationalunits.organizationalunit_id;
        title = cms_pages.title;
        year = ct_publications.year;
        authorSurname = cms_persons.surname;
        authorGivenname = cms_persons.givenname;
    }
}

//Retrieves the publications (the ids). Allows filtering for a orgaunit id 
//The authors are merged into one field in the result, each publication will 
//only appear one time
query getIdsOfPublicationsForOrgaUnit {
    BigDecimal publicationId;
    String objectType;
    BigDecimal orgaunitId;
    String title;
    Integer year;
    String authors;

    do {
        select cms_pages.item_id, 
               acs_objects.object_type, 
               cms_pages.title, 
               cms_organizationalunits.organizationalunit_id, 
               ct_publications.year, 
               (select array_to_string (array (select cms_persons.surname || ', ' || cms_persons.givenname 
                from cms_persons
                join ct_publications_authorship on cms_persons.person_id = ct_publications_authorship.person_id
                where ct_publications_authorship.publication_id = cms_pages.item_id), '; ')) as authors
        from cms_pages
        join ct_publications on cms_pages.item_id = ct_publications.publication_id 
        join cms_organizationalunits_publications_map on cms_pages.item_id = cms_organizationalunits_publications_map.publication_id
        join cms_organizationalunits on cms_organizationalunits_publications_map.orgaunit_id = cms_organizationalunits.organizationalunit_id
        join acs_objects on cms_pages.item_id = acs_objects.object_id
    } map {
        publicationId = cms_pages.item_id;
        objectType = acs_objects.object_type;
        orgaunitId = cms_organizationalunits.organizationalunit_id;
        title = cms_pages.title;
        year = ct_publications.year;
        authors = authors;
    }
}

//Retrieves all publications of an author
query getPublicationsForAuthor {
    BigDecimal publicationId;
    BigDecimal authorId;
    String objectType;    
    String title;
    Integer year;   
    Boolean reviewed;

    do {
        select cms_pages.item_id, 
               acs_objects.object_type, 
               cms_pages.title, 
               ct_publications_authorship.person_id, 
               ct_publications.year, 
               ct_publications.reviewed
        from cms_pages
        join ct_publications on cms_pages.item_id = ct_publications.publication_id
        join ct_publications_authorship on ct_publications.publication_id = ct_publications_authorship.publication_id
        join acs_objects on cms_pages.item_id = acs_objects.object_id
    } map {    
        publicationId = cms_pages.item_id;
        objectType = acs_objects.object_type;
        authorId = ct_publications_authorship.person_id;
        title = cms_pages.title;
        year = ct_publications.year;        
        reviewed = ct_publications.reviewed;
    }
}

//Retrieves all publications of an author
query getPublicationsForAuthorWithAuthors {
    BigDecimal publicationId;
    BigDecimal authorId;
    String objectType;    
    String title;
    Integer year;
    String authors;
    Boolean reviewed;

    do {
        select cms_pages.item_id, 
               acs_objects.object_type, 
               cms_pages.title, 
               ct_publications_authorship.person_id, 
               ct_publications.year, 
               ct_publications.reviewed, 
               (select array_to_string(array (select cms_persons.surname || ', ' || cms_persons.givenname
                from cms_persons
                join ct_publications_authorship on cms_persons.person_id = ct_publications_authorship.person_id
                where ct_publications_authorship.publication_id = cms_pages.item_id), '; ')) as authors
        from cms_pages
        join ct_publications on cms_pages.item_id = ct_publications.publication_id
        join ct_publications_authorship on ct_publications.publication_id = ct_publications_authorship.publication_id
        join acs_objects on cms_pages.item_id = acs_objects.object_id
    } map {    
        publicationId = cms_pages.item_id;
        objectType = acs_objects.object_type;
        authorId = ct_publications_authorship.person_id;
        title = cms_pages.title;
        year = ct_publications.year;
        authors = authors;
        reviewed = ct_publications.reviewed;
    }
}

//Old, possible obsolete queries. Will be removed soon
query getAllYearsOfPublication {
    Integer yearOfPublication;

    do {
        select distinct ct_publications.year 
        from ct_publications        
    } map {
        yearOfPublication = ct_publications.year;
    }
}

query getAllYearsOfPublicationForAuthor {
    Integer yearOfPublication;

    do {
        select distinct ct_publications.year 
        from ct_publications join  ct_publications_authorship on ct_publications.publication_id = ct_publications_authorship.publication_id 
        where person_id = :author        
    } map {
        yearOfPublication = ct_publications.year;
    }
}

query getAllPublicationTypesForAuthor {

    String objectType;

    do {
        select distinct acs_objects.object_type 
        from ct_publications join acs_objects on ct_publications.publication_id = acs_objects.object_id join ct_publications_authorship on ct_publications.publication_id = ct_publications_authorship.publication_id 
        where person_id = :author
    } map {
        objectType = acs_objects.object_type;
    }

}

query getIdsOfPublicationsOfSciMember {
    BigDecimal publicationId;
    
    do {
        select ct_publications_authorship.publication_id 
        from ct_publications_authorship 
        where ct_publications_authorship.person_id = :author
    } map {
        publicationId = ct_publications_authorship.publication_id;
    }
}