//
// Copyright (C) 2010 Jens Pelzetter
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
//

model com.arsdigita.cms.contenttypes;

import com.arsdigita.cms.ContentPage;

// PDL definition for a collected volume
object type CollectedVolume extends PublicationWithPublisher {
       
       reference key (ct_collected_volume.collected_volume_id);

       //Moved to publication Boolean[0..1] reviewed = ct_collected_volume.reviewed BIT;		
}

object type CollectedVolumeBundle extends PublicationBundle {
    reference key (ct_collected_volume_bundles.bundle_id);
}


association {
	    
	    CollectedVolumeBundle[0..n] collectedVolume = join ct_article_in_collected_volume_bundles.bundle_id
	    			  		            to ct_collected_volume_article_map.article_id,
						    join ct_collected_volume_article_map.collected_volume_id
						      to ct_collected_volume_bundles.bundle_id;
            ArticleInCollectedVolumeBundle[0..n] articles = join ct_collected_volume_bundles.bundle_id
                                                        to ct_collected_volume_article_map.collected_volume_id,
						      join ct_collected_volume_article_map.article_id
						        to ct_article_in_collected_volume_bundles.bundle_id;

            Integer[0..1] articleOrder = ct_collected_volume_article_map.article_order INTEGER;    



}

