model com.arsdigita.cms.contenttypes;

import com.arsdigita.kernel.ACSObject;
import com.arsdigita.cms.*;

object type SciProject extends GenericOrganizationalUnit {

    Date[0..1] projectbegin = ct_sciorga_projects.projectbegin DATE;
    Date[0..1] projectend = ct_sciorga_projects.projectend DATE;
    String[0..1] projectShortDesc = ct_sciorga_projects.shortdesc VARCHAR(500);
    String[0..1] projectDescription = ct_sciorga_projects.description CLOB;
    String[0..1] funding = ct_sciorga_projects.funding CLOB;
    String[0..1] fundingVolume = ct_sciorga_projects.funding_volume VARCHAR(128);
    
    reference key ( ct_sciorga_projects.project_id );
}

association {
	    SciProject[0..n] superProject = join ct_sciorga_projects.project_id
	    		                    to ct_sciorga_projects_subprojects_map.subproject_id,
					  join ct_sciorga_projects_subprojects_map.project_id
					    to ct_sciorga_projects.project_id;
					
            SciProject[0..n] subProjects = join ct_sciorga_projects.project_id
	    		     	         to ct_sciorga_projects_subprojects_map.project_id,
				       join ct_sciorga_projects_subprojects_map.subproject_id
				       	 to ct_sciorga_projects.project_id;

	    Integer[0..1] subProjectOrder = ct_sciorga_projects_subprojects_map.subprojectorder INTEGER;
	    
}

query getIdsOfContactsOfSciProject {
    BigDecimal contactId;

    do {
        select cms_organizationalunits_contact_map.contact_id 
        from cms_organizationalunits_contact_map        
        where cms_organizationalunits_contact_map.organizationalunit_id = :project       
    } map {
        contactId = cms_organizationalunits_contact_map.contact_id;
    }
}

query getIdsOfSubProjectsOfSciProject {
    BigDecimal projectId;

    do {
        select ct_sciorga_projects_subprojects_map.subproject_id
        from ct_sciorga_projects_subprojects_map
        where ct_sciorga_projects_subprojects_map.project_id = :project
    } map {
        projectId = ct_sciorga_projects_subprojects_map.project_id;
    }
}

query getIdsOfMembersOfSciProject {
    BigDecimal memberId;

    do {
        select cms_organizationalunits_person_map.person_id
        from cms_organizationalunits_person_map      
        where cms_organizationalunits_person_map.organizationalunit_id = :project
    } map {
        memberId = cms_organizationalunits_person_map.person_id;
    }
}

query getIdsOfActiveMembersOfSciProject {
    BigDecimal memberId;

    do {
        select cms_organizationalunits_person_map.person_id
        from cms_organizationalunits_person_map        
        where cms_organizationalunits_person_map.organizationalunit_id = :project 
        and cms_organizationalunits_person_map.status = 'active'
    } map {
        memberId = cms_organizationalunits_person_map.person_id;
    }
}

query getIdsOfAssociatedMembersOfSciProject {
    BigDecimal memberId;

    do {
        select cms_organizationalunits_person_map.person_id
        from cms_organizationalunits_person_map       
        where cms_organizationalunits_person_map.organizationalunit_id = :project 
        and cms_organizationalunits_person_map.status = 'associated'
    } map {
        memberId = cms_organizationalunits_person_map.personId;
    }
}

query getIdsOfFormerMembersOfSciProject {
    BigDecimal memberId;

    do {
        select cms_organizationalunits_person_map.cms_persons.person_id
        from cms_organizationalunits_person_map   
        where cms_organizationalunits_person_map.organizationalunit_id = :project 
        and (cms_organizationalunits_person_map.status = 'former' or cms_organizationalunits_person_map.status = 'associatedFormer')
    } map {
        memberId = cms_organizationalunits_person_map.personId;
    }
}

query getIdsOfPublicationLinksOfSciProject {
    BigDecimal linkId;

    do {
        select cms_related_links.related_link_id 
        from cms_related_links
        where cms_related_links.owner_id = :project 
        and cms_related_links.link_list_name = 'SciProjectPublications'
    } map {
        linkId = cms_related_links.related_link_id;
    }
}