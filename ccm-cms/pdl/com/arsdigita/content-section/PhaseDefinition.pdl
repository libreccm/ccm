//
// Copyright (C) 2001-2004 Red Hat Inc. All Rights Reserved.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
// $Id: PhaseDefinition.pdl 287 2005-02-22 00:29:02Z sskracic $
// $DateTime: 2004/08/17 23:15:09 $
model com.arsdigita.cms;

import com.arsdigita.kernel.*;

// The definiton to use when creating a phase instance. Each phase definition
// is associated with a cycle definition.



object type PhaseDefinition extends ACSObject {
    String[1..1]      label = phase_definitions.label VARCHAR(1000);
    String[0..1]      description = phase_definitions.description VARCHAR(4000);
    // The default beginning of this phase definition relative to the publish 
    // date in minutes.  A null value is same as 0.
    Integer[0..1]  defaultDelay = phase_definitions.default_delay INTEGER;

    // The default duration for this phase definition.  A null value means 
    // this phase definition does not end.
    Integer[0..1]  defaultDuration = phase_definitions.default_duration INTEGER;

    // The default Java listener class to run for the phase instances of this
    // definition.
    String[0..1]      defaultListener = phase_definitions.default_listener VARCHAR(200);

    reference key (phase_definitions.phase_definition_id);
}
