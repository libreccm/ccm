//
// Copyright (C) 2001-2004 Red Hat Inc. All Rights Reserved.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
// $Id: Phase.pdl 287 2005-02-22 00:29:02Z sskracic $
// $DateTime: 2004/08/17 23:15:09 $
model com.arsdigita.cms;

import com.arsdigita.kernel.*;

object type Phase extends ACSObject {
    //   The particular phase in a lifecycle for an item
    Date[1..1]           startDateTime = phases.start_date_time TIMESTAMP;
    Date[0..1]           endDateTime = phases.end_date_time TIMESTAMP;
    //   The Java listener class to run when of the phase begins or ends.
    String[0..1]         listener = phases.listener VARCHAR(200);
    //   The phase has begun and its begin event has been performed.
    Boolean[0..1]        hasBegun = phases.has_begun CHAR(1);
    //   The phase has ended and its end event has been performed.
    Boolean[0..1]        hasEnded = phases.has_ended CHAR(1);
    composite Lifecycle[1..1] lifecycle = join phases.cycle_id to lifecycles.cycle_id;
    composite PhaseDefinition[1..1] definition = join phases.definition_id 
                                      to phase_definitions.phase_definition_id;

    reference key (phases.phase_id);
}
