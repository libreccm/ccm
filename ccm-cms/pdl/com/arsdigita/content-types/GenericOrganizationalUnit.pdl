//
// Copyright (C) 2010 Jens Pelzetter, for the Center of Social Politics (ZeS) of
// the University of Bremen
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
//

model com.arsdigita.cms.contenttypes;

import com.arsdigita.cms.ContentPage;

//PDL definition for a commons base type for orgnizations, departments, projects etc.
object type GenericOrganizationalUnit extends ContentPage {
    String[0..1] orgaunit_name = cms_organizationalunit.name VARCHAR(256);

    String[0..1] addendum = cms_organizationalunit.nameaddendum VARCHAR(512);

    reference key (cms_organizationalunits.organizationalunit_id);
}

//Parent <-> child relation organizationalunits to build department structures etc.
association {

    GenericOrganizationalUnit[0..n] children = join cms_organizationalunits.organizationalunit_id
                                                 to cms_organizationalunit_organizationalunit_map.children_id,
                                               join cms_organizationalunit_organizationalunit_map.parent_id
                                                 to cms_organizationalunits.organizationalunit_id;

    GenericOrganizationalUnit[0..1] parent = join cms_organizationalunits.organizationalunit_id
                                               to cms_organizationalunit_organizationalunit_map.parent_id,
                                             join cms_organizationalunit_organizationalunit_map.children_id
                                               to cms_organizationalunits.organizationalunit_id;

    //Link attribute, allows it to customize the order which the childs will be shown.
    BigDecimal[0..1] order = cms_organizationalunit_organizationalunit_map.order INTEGER;
}

//Link for contact points.
association {

    GenericOrganizationalUnit[0..1] organizationalunit = join cms_contacts.contact_id
                                                           to cms_organizationalunit_contact_map.contact_id,
                                                         join cms_organizationalunit_contact_map.organizationalunit_id
                                                           to cms_organizationalunits.organizationalunit_id;

    GenericContact[0..n] contacts = join cms_organizationalunits.organizationalunit_id
                                      to cms_organizationalunit_contact_map.organizationalunit_id,
                                    join cms_organizationalunit_contact_map.contact_id
                                      to cms_contacts.contact_id;

   //Some link attributes.
   String contact_type = cms_organizationalunit_contact_map.contact_type VARCHAR(100);
   BigDecimal contact_order = cms_organizationalunit_contact_map.contact_order INTEGER;

}