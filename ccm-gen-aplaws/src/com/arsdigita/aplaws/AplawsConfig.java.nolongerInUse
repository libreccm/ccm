/*
 * Copyright (C) 2002-2005 Runtime Collective Ltd. All Rights Reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

package com.arsdigita.aplaws;

import com.arsdigita.runtime.AbstractConfig;
import com.arsdigita.util.parameter.Parameter;
import com.arsdigita.util.parameter.BooleanParameter;
import com.arsdigita.util.parameter.StringParameter;

import org.apache.log4j.Logger;


/**
 * AplawsConfig
 *
 * @version $Revision: 1.2 $ $Date: 2005/01/07 19:01:40 $
 * @version $Id: AplawsConfig.java 1565 2007-04-18 16:46:14Z apevec $
 */
public class AplawsConfig extends AbstractConfig {

    /** A logger instance.  */
    private static final Logger s_log = Logger.getLogger(AplawsConfig.class);

    /** Singelton config object.  */
    private static AplawsConfig s_conf;

    /**
     * Gain a SimpleAddressConfig object.
     *
     * Singelton pattern, don't instantiate a config object using the
     * constructor directly!
     * @return
     */
    public static synchronized AplawsConfig getConfig() {
        if (s_conf == null) {
            s_conf = new AplawsConfig();
            s_conf.load();
        }

        return s_conf;
    }

    // set of configuration parameters

	

    
    
}
