//
// Copyright (C) 2001-2004 Red Hat Inc. All Rights Reserved.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
// $Id: Listener.pdl 287 2005-02-22 00:29:02Z sskracic $
// $DateTime: 2004/08/16 18:10:38 $
model com.arsdigita.formbuilder;


// The pdl parser will not let me import just ACSObject
import com.arsdigita.kernel.*;


object type Listener extends ACSObject {
    String[0..1] className = bebop_listeners.class_name VARCHAR(150); 
    String[0..1] attributeString = bebop_listeners.attribute_string VARCHAR(4000);
    reference key (bebop_listeners.listener_id);
}

// The Form Builder does not currently support reusable listeners
// The component keyword and the 1..1 multiplicity ensure that when
// the listener is removed from this association is is also removed
// from the bebop_listeners table.

association {
    Widget[1..1] widget = join bebop_listeners.listener_id 
                            to bebop_listener_map.listener_id,
                          join bebop_listener_map.component_id 
                            to bebop_widgets.widget_id;
    component Listener[0..n] listeners = 
              join bebop_widgets.widget_id to bebop_listener_map.component_id,
              join bebop_listener_map.listener_id 
                to bebop_listeners.listener_id;
}
