//
// Copyright (C) 2001-2004 Red Hat Inc. All Rights Reserved.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
// $Id: UserTask.pdl 287 2005-02-22 00:29:02Z sskracic $
// $DateTime: 2004/08/16 18:10:38 $
model com.arsdigita.workflow.simple;

import com.arsdigita.kernel.*;

object type UserTask extends Task {

    String     isLocked = cw_user_tasks.is_locked CHAR(1);
    BigDecimal lockingUserId = cw_user_tasks.locking_user_id INTEGER;
    Date        startDate = cw_user_tasks.start_date TIMESTAMP;
    Date        dueDate = cw_user_tasks.due_date TIMESTAMP;
    BigDecimal   durationMinutes = cw_user_tasks.duration_minutes INTEGER;
    BigDecimal   notificationSenderID = cw_user_tasks.notification_sender_id INTEGER;

    reference key (cw_user_tasks.task_id);
}


association {
    User[0..n] assignedUsers = join cw_user_tasks.task_id 
                             to cw_task_user_assignees.task_id,
                           join cw_task_user_assignees.user_id 
                             to users.user_id;
    UserTask[0..n] tasks = join users.user_id 
                                  to cw_task_user_assignees.user_id,
                                join cw_task_user_assignees.task_id
                                  to cw_user_tasks.task_id;
}

// Group task association
association {
    UserTask[0..n] tasks = join groups.group_id
                             to cw_task_group_assignees.group_id,
                           join cw_task_group_assignees.task_id
                             to cw_user_tasks.task_id;
    Group[0..n] assignedGroups = join cw_user_tasks.task_id 
                                   to cw_task_group_assignees.task_id,
                                 join cw_task_group_assignees.group_id 
                                    to groups.group_id;
}
