# To customize logging, copy this file to
# $CCM_HOME/WEB-INF/log4j2.properties and edit it appropriately.


name=LibreCCM Log4j2 Configuration
#property.filename = logs
appenders = console
#appenders = console, file

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{ISO8601} [%5.5t] %-5p %c{2} - %m%n

#appender.file.type = File
#appender.file.name = LOGFILE
#appender.file.filename = ${filename}/ccm.log
#appender.file.layout.type = PatternLayout
#appender.file.layout.pattern = %d{ISO8601} [%5.5t] %-5p %c{2} - %m%n

rootLogger.level = WARN
rootLogger.appenderRefs = stdout
rootLogger.appenderRefs.stdout.ref = STDOUT

#logger.com.arsdigita.web.CCMApplicationContextListener.level = ERROR
# Choose one of the following lines, or make up your own...
#log4j.rootCategory=WARN, console, file
#log4j.rootCategory=WARN, syslog
#log4j.rootCategory=WARN, console

# Sets up a console (standard out) appender.


# Sends messages to a file.  Uncomment this block & the alternate
# 'log4j.rootCategory' line above.
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ISO8601} [%5.5t] %-5p %c{2} - %m%n
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#log4j.appender.file.File=/var/log/ccm/system.log

# Sends messages to a remote server via syslog. 
# Uncomment this block & the alternate log4j.rootCategory line above
#log4j.appender.syslog.layout=org.apache.log4j.PatternLayout
#log4j.appender.syslog.layout.ConversionPattern=ccm: [%5.5t] %-5p %c{2} - %m%n
#log4j.appender.syslog=org.apache.log4j.net.SyslogAppender
#log4j.appender.syslog.Facility=local5
#log4j.appender.syslog.SyslogHost=loghost.example.com


# Change logger priorities below here:

# ==========================
# Widely used logging output
# ==========================
# For seeing progress of container startup process
#log4j.logger.com.arsdigita.web.CCMApplicationContextListener=ERROR

# For seeing progress of main runtime initialization process
#log4j.logger.com.arsdigita.runtime.CCMResourceManager=INFO
#log4j.logger.com.arsdigita.runtime.Runtime=INFO

#log4j.logger.com.arsdigita.bundle.Loader=INFO

# For seeing progress of the 'ccm load' command
#log4j.logger.com.arsdigita.packaging.Loader=INFO
#log4j.logger.com.arsdigita.core.Loader=INFO
#log4j.logger.com.arsdigita.loader.CoreLoader=INFO
#log4j.logger.com.arsdigita.core.Initializer=INFO
#log4j.logger.com.arsdigita.cms.Loader=INFO
#log4j.logger.com.arsdigita.cms.Initializer=INFO
#log4j.logger.com.arsdigita.forum.Loader=INFO


# ================================================
# CORE classes
# ================================================

# Package redhat.persistence
# ==========================
# For debugging all queries run by persistence
#log4j.logger.com.redhat.persistence.engine.rdbms.RDBMSEngine=info

# Package templating
# ==================
# For debuging XSLT file resolution
#log4j.logger.com.arsdigita.templating.PatternStylesheetResolver=DEBUG


# Package web
# ===========
# For debugging the general dispatcher process:
#log4j.logger.com.arsdigita.web.BaseServlet=DEBUG
#log4j.logger.com.arsdigita.web.CCMDispatcherServlet=DEBUG

# For debugging the JSP file dispatcher
#log4j.logger.com.arsdigita.web.ApplicationFileServlet=DEBUG
#log4j.logger.com.arsdigita.web.DefaultApplicationFileResolver=DEBUG

#log4j.logger.com.arsdigita.web.Web=DEBUG
