/*
 * Copyright (C) 2002-2004 Red Hat Inc. All Rights Reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 */
package com.arsdigita.versioning;

import com.arsdigita.initializer.Configuration;
import com.arsdigita.initializer.InitializationException;

import org.apache.log4j.Logger;

/**
 * Sets up observers and initializes a few disconnected data objects needed by
 * versioning.
 *
 * @author  Vadim Nasardinov (vadimn@redhat.com)
 * @since   2003-07-30
 * @version $Revision: #18 $ $Date: 2004/08/16 $
 **/
public class Initializer implements com.arsdigita.initializer.Initializer {
    private Configuration m_conf = new Configuration();
    private static final String DEBUG_ON = "debugInterfaceOn";
    private static boolean s_hasRun = false;

    private static final Logger s_log = Logger.getLogger(Initializer.class);

    public Initializer() throws InitializationException {
        m_conf.initParameter(DEBUG_ON,
                             "Enable/disable the versioning servlet.",
                             Boolean.class,
                             Boolean.FALSE);
    }

    public Configuration getConfiguration() {
        s_log.debug("Versioning Initializer configuration loading.");
        return m_conf;
    }

    public void startup() throws InitializationException {
        s_log.debug("Versioning Initializer is loading.");
        EventType.initialize();
        Types.initialize();
        s_hasRun = true;
    }

    public void shutdown() {}

    /**
     * This package-scoped method is used for unit tests.
     **/
    static boolean hasRun() {
        return s_hasRun;
    }
}
