//
// Copyright (C) 2002-2004 Red Hat Inc. All Rights Reserved.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
// $Id: DataOperationExtra.pg.pdl 287 2005-02-22 00:29:02Z sskracic $
// $DateTime: 2004/08/16 18:10:38 $
model examples;

data operation DataOperationWithPLSQL {
    do {
        select DataOperationProcedure();
    }
}

data operation DataOperationWithPLSQLAndReturn {
    do {
        select DataOperationFunction() as returnValue
    } map {
        returnValue = returnValue;
    }
}

data operation DataOperationWithPLSQLAndArgs {
    do {
        select DataOperationProcedureWithArgs(:priority)
    }
}


data operation DataOperationProcedureOneArg {
    do {
        select DataOperationProcedureOneArg(:description)
    }
}

query DataOperationFunction {
    String newValue;
    do {
        select DataOperationFunction() as newValue
    } map {
        newValue = newValue;
    }
}

query DataOperationProcWithOut {
    String newID;
    Integer oldID;
    do {
        select DataOperationProcWithOut(:oldID) as newID
    } map {
        newID = newID;
        oldID = newID;
    }
}

query DataOperationProcWithInOut {
    String newID;
    do {
        select DataOperationProcWithInOut(:oldID) as newID
    } map {
        newID = newID;
    }
}

query DataOperationProcWithInOutInt {
    Integer oldID;
    Integer newID;
    do {
        select DataOperationProcWithInOutInt(:oldID) as newID
    } map {
        oldID = newID;
        newID = newID;
    }
}

query DataOperationProcWithDates {
    Date newDate;
    do {
        select DataOperationProcWithDates(:idToUpdate, :oldDate) as newDate
    } map {
        newDate = newDate;
    }
}


query PLSQLWithArbitraryArgsQuery {
     do {
         select PLSQLWithArbitraryArgs(:arg1, :arg2, :arg3, :arg4, :arg5)
     }  
}
