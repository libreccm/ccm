//
// Copyright (C) 2002-2004 Red Hat Inc. All Rights Reserved.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
// $Id: DataQueryExtra.ora.pdl 287 2005-02-22 00:29:02Z sskracic $
// $DateTime: 2004/08/16 18:10:38 $
model examples;

query DataOperationWithPLSQLAndArgsAndReturn {
    BigDecimal Item;

    do {
        select DataOperationProcWithReturn(:entryID) as entry from dual
    } map {
        Item = dual.entry;
    }
}

query SubQuery {
    do {
        select 1
        from dual
        where 2 = :two
    }
}

query NamedFilter {
    do {
        trunc(action_time, 'yyyy') = to_date(:year || '0101', 'yyyymmdd')
    }
}

query DataQueryLongNames {
    String aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
    String bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;
    String cccccccccccccccccccccccccccccccc;
    String dddddddddddddddddddddddddddddddd;
    String eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee;
    String ffffffffffffffffffffffffffffffff;
    String gggggggggggggggggggggggggggggggg;
    String hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh;
    String iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii;
    String jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj;
    String kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk;

    do {
        select 'a' as a,
               'b' as b,
               'c' as c,
               'd' as d,
               'e' as e,
               'f' as f,
               'g' as g,
               'h' as h,
               'i' as i,
               'j' as j,
               'k' as k
        from dual
    } map {
        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa = a;
        bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb = b;
        cccccccccccccccccccccccccccccccc = c;
        dddddddddddddddddddddddddddddddd = d;
        eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee = e;
        ffffffffffffffffffffffffffffffff = f;
        gggggggggggggggggggggggggggggggg = g;
        hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh = h;
        iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii = i;
        jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = j;
        kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = k;
    }
}
