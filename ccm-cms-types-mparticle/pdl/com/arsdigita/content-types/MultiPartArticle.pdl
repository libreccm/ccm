//
// Copyright (C) 2002-2004 Red Hat Inc. All Rights Reserved.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
//
// $Id: MultiPartArticle.pdl 287 2005-02-22 00:29:02Z sskracic $
// $DateTime: 2004/08/17 23:15:09 $
model com.arsdigita.cms.contenttypes;

import com.arsdigita.cms.*;

// object type to hold multi-part article content type
object type MultiPartArticle extends ContentPage {

    // the summary of the article
    String [0..1] summary = ct_mp_articles.summary VARCHAR(4000);
	
    reference key ( ct_mp_articles.article_id );

}

association {
    composite MultiPartArticle[1..1] mparticle = join ct_mp_sections.article_id
                                                   to ct_mp_articles.article_id;
    component ArticleSection[0..n] sections = join ct_mp_articles.article_id
						to ct_mp_sections.article_id;
}

query PageNumberForArticleSection {
	Integer pageNumber;
	
	do  {
	
		SELECT count (a.section_id) + 1 as page
		from   ct_mp_sections a,
		 	   ct_mp_sections b

		where  a.page_break = '1'
		and   a.rank < b.rank
		and   a.article_id = b.article_id
		and   b.section_id = :section
	} map {
		pageNumber = page;
	}
}
